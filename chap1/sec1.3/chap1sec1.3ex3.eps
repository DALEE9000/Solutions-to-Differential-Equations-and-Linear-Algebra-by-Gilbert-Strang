%!PS-Adobe-2.0
%%Creator: dvips(k) 2024.1 (TeX Live 2024)  Copyright 2024 Radical Eye Software
%%Title: 3c669d2bf0cb2d41a31c5206f7ad10cf.dvi
%%CreationDate: Wed Jun 26 19:09:18 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 371 242
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\david\AppData\Local\Temp\tmpmxd5nhew\tmp.ps
%+ C:\Users\david\.matplotlib\tex.cache\3c\66\3c669d2bf0cb2d41a31c5206f7ad10cf.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.06.26:1509
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2024 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9435B8575DDAB8AF9358720367
9A974E13D88C63121A3196210E0C1363B06E0C4CB49A374F2A0C163CE0512C22
CDFB43CD103ED7A1C7F60F195BA7693D85B215EB16AB54258BA29944DA255B21
F05B2BCDC438FD2BC92C7504B526AD5D4999C58AF45652CC65C48B007DCAA673
A4F0AFC9CF4146A4726BB9CBAA3F01A38780E5BA1B81216B89C887314DAC65BD
EA2053C11B4A9EAFC758481FA367FA3D825C89C4FC667701D7E9CC89CBAD30CF
84AF396F93CA35EB458CAD1ACB10FBB5323BCB8065F833AAB8D9CFBAB4A81669
BC31A6240A5A85971093E110517E9B2F8404F601199BD3D3361647F45C0BFC43
A9BE61124A864CF70C72680B14A0BB45AB5F7642EEE8E3F25E4333E3C9A1BBCA
EC29421E21E8FC46F8C32139635B2938A5A9EFE90AC92E1B0CC8FA70AF0E6573
D5CE090C2DBDCA93B57A82AF52A14DB5E019CC7C9C82D5BF578A0C3D7F1620D6
19856345A9C17F1CC1EB7E515D7ED2B1A30A3D1B4C852865F417EB53DF73CC03
6BA1DC8D789B86226E38B0DB3AFD1894F1BF6CE7C365D68A64D44FDF8C65B8FF
34647199217D035B2D8E9D8C05B11778948FA94928834BEE3A09E9DFF1D7C227
93E76FCC5C42CADBE15BD012DC48E388B7B54F4D085798E459B5F96B09DA6000
AEA0E6DA6F0FC8434654301BF2589783EAA854204449A841E935DCED6A289C01
AB88876D626C0DDF493F875241C2D086F9DAC374E9A17AB678698D2B6F11332A
AE28B73A4316EA2278A65E36711CE80A4360D829E3905EFCB8CC3A3A5AD57EAD
62A642F7BC52D0064D626BA548C4D3A6271DD6C27CEA2D32409DF97C2A92B344
786D1D8F4EBCCF7BA65CBB6605D4D72E11338D87D5B02C78C3897E4DB66CA9AB
7408DC9222E1E405A7ACDF24620FAA16910AA9EB967D0B382CC9929D8D11C794
E2374B0FB13575A3128991794AD36351F8A8B4A09FC2914BFCE14913B22B6848
FEFA6107790BE7B3C7F559471B0B7F7628710490D4EAAFCB97DA6CC62877D75C
BFECB69F7D9626501D087C8982D6B21A28ABE896316C1FCC57968F0790331776
BEFEAB8F5C38EB0971BD1987095FCA5160EB068BE37645E63963E93778DFFB58
C420EFE7799210DBC2CC0C922AEF593F091226BD53504A414099BA8E0BCE5A26
D6A1E3A7D87373B3B9B483CB36F7AA749F1405D651D8FEDE0948C8513672ECFB
7354AFD9BAFD2D9DAAF0AFF6DD0B5E0FB46B8250CED51C595DD7C14E54AB0F48
AA2BD809CCBF0DF734F6ACCFD91983E43C54501A7896B300BEDD40C4E6A9AEDE
8292F21814EA7DFF4768721C5A1D2E8D121A76F101DD501B215E0C207067F1E6
95951C726032A6BA4842A8A46819A8980A2806FFA8F03D2505304EE633F51FD4
591D339995F35204393280DDACCACB51D965C80D07E0634D699E6CA2E0675170
3D5A6FC58431AB9C277C86B4C5D302A05A12865BBD9A17F4100D708C06A34D2E
1D514FCB4FB9A4D6BDB195A9081054D2193B8BC36A6C26FB97DE6E1E78EB89C0
62643FCEA1311E9C2FF30C70EA2E621DD45DE5AFFABF3E1999D9070E6B17ECD0
86C5BBB2FDFB71C20F495B98856A975C51969762503E2DE18259638D6D99F591
C2181F4DC33BCC6C2FEEA0C69754128BFBD8BA0BB3B8DD2F0B8D82752D01BB82
84F0FFE27A011C70C1A05E16A43289CB68D0CDCEE5CA150D6A2E581AC595954F
C6CA7D436FF2FAA0615532EAE56C6FA0B0FAB7084265CCD847828E088B75D39B
CC47C20C020C946F0F8E03A35A25011EF6036096398D8D10ADD46B3FCFC12980
C2E94040970B0E4652883F787218F676D60FD5560B7E841CCEF9412CD96BC919
0FF4B231AA728E36BE2546EAFF63F4C53E435F8619E256E1F3191DCA7DDED14C
02CCEA3FE108481E853CC710149AFDB318503F1C0007CB9D1F6F30E2929F3BEC
1A698AFBEE2418D5AECF85320B9CFFFF0802EF9341EE32A79745AA15E635B2C4
594F7C707676C3D47D893F2AFEDC6D63BA853EB10586ABEB987F710C9468CCF7
058BD20433DE9E42E2446A386CDFE1004711F95FEAEBBDF0D7F17F9CB1AECABA
AEAE0CAB5F25C0A04EA9DDA2F52C49F08C2C5000002DEBB3FB7E002BBA9FAE45
7A25E684B8C94CA386765C5E7E29717633B24B5877C5F6C9E49FEBC2B0D198A2
4DC7CC5A91FDDCAC2042ADFEBDDAFD74CC5D71601E8D5B0B06CC8A2F3A9CFF48
38B81829312A11861F6A50D7011BCAD9B86BFB6772CA98CA95FFD01EC4E666A5
693C95962D6AC49F31A5D39135CC8D762C5CEDEBBBB88E1A128C703B11FFEDB7
06DD4BB5D047A5D5DF23D2D2576FAF73FBD58B36CB1CD140277AD77F1645EFCF
7B25133F1953BB45A1556101387F5836CB344477D7A6516139C532BDADFBAAD9
E2323EAA0BF87607A630CF476BA2ABE8979385A0C906C7E0FA7711ABE15A1EEF
8555D3C26BDF7A0FF874479C7591823204B2FCA6980CD37D3E87024C249F029F
EB58F93B6243FF6AD2C9659F602269475DE9B02E6A68FCCA74B31EF41D3CE547
C09DFD50B9BEA18D947C731430F67B7ED3B19BBC746DE44065D4297B398A16D0
78A4417404AEC1040C62837132F24B4E513D791E8426CC0A112E0565D1E19200
94A0509510A0DBD662CA5C5C21638900C3AF88825D444E3C0B1C0983B448D9CF
858E7E7251F22E5BB06A154054968F9E6176AFEABB9D66F8BE7ECBC8A6F5489B
0C17900AF38B219AC0C63A34A45E59D1D51E5A94212F7E51FAE541F3A3F1A80D
0486B75FE82E88EAA03F65077776C747047E3CA1614941E5A2F473A7FB099D3D
51EF85BE0B5CB4644F01AC7AAE77183C14FA5B76B08C3D154265A22CD86C8F19
BE5E606C079D70699D8D4D29FB72DC6E7958A3F9996416750E53E61A74BE0CFC
4609499C716E4A5E297A1E2D8303D334B9A68A8C77FA059C888478C5ADCBF664
2E5B60299CC6CA6199245EA9F04462DA980E39DDE36AA943576A8F4719939ABC
C699F513202342AE198286D20AC7AAFA69D2F818E5B314CBA2881FE36EAC2473
414A947D6DFB40EA1772019226B66B4BD3378796AB53A27269CC3187D8749CAD
1830C1B5D0A097E3CECEF528F5442BE81CBEAEEB0A385668169808AB5882A7C9
0C710FBA17BCE2F53FB073BB44D2C8CB8659F409A378E222A8FBAB774BBEC142
63A718A6A5892D2C9D76A33FF976307A844B50789CD5787D9493A1DEEF0F9390
60F87539160576A61A079DC25D1EA2E16C3C350319E87F5D02D813EB932D9F42
8C431683A41CC3A70EACD94C76A3E63B876E38AFF9D3FE37F8A42D8371D7BFED
0FAA4CD9EA5A0F30C3DB3335C207E5689BEF00921406DCBD4DD3A2653D864B74
4DB3343F1B3E40C20B9DCE0199A2DD4647E0E991299B1B2242D1C7DF7D4E2D95
18973539889BD15DD00372DB7F657194D76B1B0D2CBABE2A7B2D39954D7C874E
E52CB2E152E1BAD8C1A2236DE37134E9EF024F2BA420E8B4E81C48FCE02C50D8
613AB70C8FB1A614DA77C3B3D4CA8941F5A1F5CABED24A026F1AB592206D3BE7
6EA1C3378422BC863EB0C101BB025020CC28A3304C7775C4AAEE4D99029A9400
34FD144C5E652AE3A4015D47B2A2718F647AE6533F49E1EEDE11AD179FD47A29
E5D9A168F311EC69E1D3B2800BE6FB4D17BBDC1726ECE1ECBFF22A23348343C2
C288246FBF88527E0B0F90536CF7DA176B9DA3DCED7AC83436A04FC0C4D70ED9
30D661E88B0D4DE6912A894E1CBAF8E38631300959B21B2B6F9A8A8271223E17
B12E63C0FC3E29ACFB9DF1430762D5368FA087A0BD73412D709B7DD7FEAE2B4D
3BFDFA685AEAD675D871CE0EF597708914605E339D7513FECEE74A261954F52B
FB5BE32A6E91FC3CE1471DF76254F5ECBDAF686AF48F11D244EF3E392AB59A0F
9CACB36D3D2CB0B54135F905858D634B32F25702C521D9CB5978165483B0C217
4CBA0229348D9C7E00498357B03DADC8EE815DF950C9CCA4B7A573E89512BD10
A05B1D72601F97840F2336D39A6F2F28F96227B12C8C414C7D2F2CC0C2A8F30F
FE69494CB5B47BFC94AEF30EB982638E9F65287AFEF2544CBE9D4547C4EF7E5D
31991BEBAC59732670AFD07B7F61D0281301375F49EDF69F4E7B82DD88DCAC95
2F8AFE42B871C4EC6D4F07E3B46704B69FB1E640A4C02F8BED2CAD0791726776
F309577698181779B922C43ECD4ECAC58728943ACB4E3A1751F321E65CE907DE
85051E024ACA4D7C94BA7516B3A8D2A01D2A308A22795B3110962C1817322590
188019FC91C37569E6E0A98852516E08D73F053A565959E8E118E2DD2891C75D
44820A7793900FFE0F5A802439E8E62AA144733FA1DE72E1FA80F40EACCDB96D
6C71E016D1826FD2C7FC29CFBCD9A399D26354FC73FCAF31C661B026C2F43F3B
8D36C17620E0E973675B2FAD6E8DD97A6132C126F37DF13B02531C0FEEAB775C
70B10E70109757D2A8B6A382E307963126E9DEAC04BC392681A51C4BC3F9D3BC
D1D849D4210326C50141D36C32A0EB51FC9466ED7027BEAFE7C6BE0F4A60E21E
8314AAF5EAA50298A2BE167F01AA395F4D65EE8A7726E4BEF90931DA30BD1A0A
C04F9603B5AFCFDB903FA42BB42D0CE3A38C72A0188D97AE0D3F7773C3A9DFAB
E37123D1AC1CE20CB05CE8A092C2A7F403246B722BB9747DCDC64454DFDF6B0A
55F1FA6312433AFBA44ADE2375C8315FBD01B1D68D8873E3D9763C2E744487F4
F5F98A70DFD0FDC40AFF1DC304C1AA30B2A4DB9F63B435BB4C80D96163B0D4F2
D66DE173EE584557C4A0E2A6FFF8CB5CFE24EDD317E92EAF445CF5BDD64743F6
CDF295AC6CEADCCE88249D136EF4304BCED87779DD6132C6706923B04FDCC350
DC764E336231A8B61842085522219B86B74079929B098B113093714CB22EE564
ABA28A92255E33BCA44CA6E4BF30FAA8FAD516385465CE9581F1CEE44C453C46
08F2E50BD90B3D1E6BE886B68A2D6167A860DA45BEA1E3D54EF58CD1628A45BC
C2DE0AF5DA9737BDD98FF0170D0F9BCB3C8493DA5F38D7A78FD5FC939B9686FA
E6EA09785BF8E7F0C68D5DFF55E461061AFCC409BC0CC708749B14B9FAA6BE99
8A3C18B77F78CF15B7B81907EADAC360C9400B7FF213D2B2462BD7F22BA25C50
9358FA7AF8A432DD047D5629EE1E0AF3ED48FBA38B1506662B9195440C653C96
6FC7AA28821525EA32DD5C49F2E5D69653E6F79252EA12DE53885C01847872A6
D7CC86B15EA4942503A3EA04C014CC4380EC5A6AD89D4A9CFB3607506DDE53D0
8A798958F25314926B821B321CB50A9CD87B94E5976E644BD183B7B951A18103
349DF1A169A5320FF379B353FCF220363B8547D3A8E869BEAA1941A6172DC8B5
2E8FF188AB05B5AE73B9D991A06968074D8C4AA611C6296EA15BF8ABC21A3599
F1CE38DA91294041BB4EB6482D39445E355BE72EC5FCB2843C88B53693AA8EA5
DBFFCF4CF2C9C0095790CF1DEF97D4FCAC762DCB062811500ED55B080C789094
68F39506DF3E03EA1D26C546CA5995ECF22C930ACE1FD53390DF7106C9C5756A
8FEA1C5665F751FB3B877E9BF8CC5140E0D482375496067AF5D617A93CDA0960
657C6484C0B070617D8BA1E5D5B806CC1E8F7DC086B9BC60D9A75F0645D9450C
D075BA46DF810149B8C261CF3993FB17D625D6B84E46EC73286FBD3968265124
6945D38E022E7C256924D67BA2814AF02D8A89FEAC6745B5FC1EAE98214FFF47
36A858D650FA7B550CCDAE2E8016EEBD298F4DFD4FCDAA1BB03B00213B9B1AEA
5FC6477CD7E38B72EA41737849243C62FDC18E6325B92B4B44C5ABBB153DEC96
CF7F361221CBB3427C0C578C5D2E2507DB9F3C4A0121DA623E91E2B830A7D67D
4E97936F1E5052066ABE238A038D16E1B1C0F32460881AC44988DEEB960FF951
9BC5072F0BAC515EBB69DCBEAA2DA6B8DEEC921032A51AA18A92BA5C67191C85
9CADAF4A010BC2644820B7574F263B0CA4C583D9FEF9F71F26A9A4BCDCEC10C4
C6D8E6CC3D6F1F23C8D5AA4AA9A02BF16F1A934C31993497F8B4AEE0FF5EDC35
578B453815FB32C366E1BB79E0AD6260E1A6B788F9EA82B8B7FA505FA434A83E
02C00155D244BFB152DFAFCF2D1C569B8C6C4CCC63AFD2C05D83B80EDDC54101
8DC74A9A13AACBA3039E53B58E3DBBCEA38C67AF17A0BB23B66124203536CBA8
C85BEEE97D6CE535CEC0A59F698E2C2AB3DC0606566A59A97246093EB764FA9E
892ED80662FD2F77E9E88178497F25C1FD8EEE91AED8F1D4B2CEEC0999FDFF6F
AE2C028721DF3E09DE2982E444F2F69EE141E3C54EC69F321A71B6C996493700
FFCABE3000CC9ACB2D0D6F863900774770D728066023AD9AF7E8EBA966F0FB06
C73576CADB87927E66DD5893B14D2818E9F699CD2E40CC57D26CE24C4D5E3019
AF019CA2DC7F88E009336248D90B8291C9ACF409D0AA1338DC755BE08E7A2D00
2AC06EC52A6545A7C07EDD5B107EED6C87510953E8F20D3FC96F3ECBB7D3C77B
0FEF3183298E73D58AF1A00994AB79203DB37F337186B5A82BE4425CE64BB950
53F666EA79E5658B752DAC52771FA1B5BC6D907BBB3F849E2F590D2C3F7A761D
FFBB9067B2B81240E946E5DD62E082EC1A9CF72DF5ACEAEF78CDDE952F2AC915
252DAF800F1916B28A529A2F6981B3E0A82553E7FE2A586D0C748E8CBDE90BF0
DDD4DE804EED6177A20B25BE10094DECA690A67D23D0B19C0D3E55F328C86ED4
F2453C4A7B3766AEB95352B6746290E0128C7F60396797FB45EF239E3D37057F
FE1245F5BFD80A5F5E0B87B76D03ED5C356B7392E91686AB95B1DEDC375E1845
0F5D530F5E6A43A113876A0257662CA3510DD32961A73CEB4C6056134C756299
B51B03D1AE77A8DF8A226860E8CFECAB3F37623EEA5ECB63D2E43A7A5A790E41
3A8A3D865BFD1D27A3F8966EA7078E55CE27ED1A136C8BF95ADF2407C3D32DC5
E473F2C0716C65EA598FC06FCF13959C884B7B2339B255272896CC0A3CE2661B
A7662ED03FFBDB0039EAF858301D78559C554BD8BED86F6D1CA38F53D5FBEBB3
670437683FA425EFA7DF7E4D9379308DA4C7166780488418BA7A7FDEEFC045A3
8D7007760ABD63694D138726BE50AA44C469EADE434097596C34A7505CC9E5A8
C36F81865834F408A5134552DE251311852E1C7DCC65545735A97AAB11AD2CCF
E237BE605D80865C212D66401C1BB18C80685249EB54E3CB5A02E2F7897468C2
90F7184C3BB499431D7898DBB1DB524B7E9AF35C2CDBA812060DFC92F201FC9C
31F4DC77C667827DBA2EE1D039C5EA076252349B2CE5A04ED27BF0D530E37AEB
6BD0144A6EABD0E4ABEEE1CD60BCAA27D45ADC4E9D6E4D8CC6F4BE6D44E741BF
4AB0695CFA0A2D85A13F2200ED1F0ED2E43C394C66E63B505CB2C2005DDD22E1
050DAC01A6A080C4F08C1F7C53CA889E0C9CADDB31774BDF039DBDBB44A700FE
0F039CFDEB551FB5564F5098337FFC976428A237D3C70CF22D562BE3F3D83D2E
255C7EC6585CBE830B523913FFFD2BBFD03309BD6F175F4E6381C47C7879F22A
97F0218173AC545FC8F76BBD0F130BEBD465D5173282FB0979868BC30FD53496
9796A2F8D039B599834841E6D834FC30E993C2A2992A45786A7C6143F91274CE
C2206C7BFA7EE021FC1AB854C11BCBCCDEC1EE6074CD669B124A8333506165E2
0974AA6272C8826062160FF254F47698CF2F95E57CA613798CD9D8C3D5EF0391
9613387078095E8A12D9ACAA967EF1C90841B1EE0C5D0AF8314B872A201462C3
91D1A7F2FB9C889CC43B02426DB4236C906B951CB3ABEC2C93458AE121EEA4E7
4A733C8780A067F52B61FEF1E2EDE14E2CD5ED1F33A960D0D395B57B0D15A194
568846619BEA2353579D626114DFB2C7927CE72CC19143732487FB8F042B5EDE
51D4F1A1CEDAF190CB12E00E2545B7950EE4885A3F70126C01D13B66490C9F2D
9BC6F2B65BFC6F7C65C93C24CCBB177CFF965BF40271B7029D6B62ECA969C140
BC697FC73B643826ECC8D2EAC5049B455E6C0E00B146802A3A02F462D51E2D8D
0CCB51A603379F02FBA0791E796A27343958462A6E8A98058BA4CA1FC01F720C
977A21D809A8C4118B420EC0A56723067698564F00D23DE7BCE10012AB263997
DDFD185CF5CD0F7B0D4D3666097F3323EE002F0C38FCC3510B6CE0190281BA4C
7EA0DE8F62184E8393A7B5F3F88BE0E4742E097C9FB740F9783679B5A53C3382
F5D362776078475793C32CBFD5AA79188816C09ED5D6BFA53C8827E8D37497D2
D6E5C47DA7FAC9CB174AA7EF1F06DAB74DA9F06E1CB376E7B74A1BDD96AD6375
D0FD8022DAD09BE34295BD7B5C5894E2CAA9AD4F811BC6D8F316E63472FF73D0
853454AFAEC608F0B42556CADB602CB33532D7F29EB24B34E199A3BE06527A5F
3720C4120C0AF024D664B7C87F83506456E8F8F2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 24365974 15874176 1000 600 600
(C:\Users\david\.matplotlib\tex.cache\3c\66\3c669d2bf0cb2d41a31c5206f7ad10cf.dvi)
@start /Fa 139[32 33 33 1[46 1[46 69 23 4[42 25 37 1[37
1[42 13[46 2[57 23[42 42 42 42 42 1[42 42 42 48[{}22
83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1417 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1417 a -600 1417 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
0.000000]](psmarker14)[[14(bl)1 0.000000]]15 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 -600 1417 a @beginspecial 0 @llx 0
@lly 371 @urx 242 @ury 3710 @rwi @clip @setspecial
%%BeginDocument: C:/Users/david/AppData/Local/Temp/tmpoxxkorb_/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%Title: chap1sec1.3ex3.eps
%%Creator: Matplotlib v3.8.4, https://matplotlib.org/
%%CreationDate: Wed Jun 26 15:09:16 2024
%%BoundingBox: 0 0 371 242
%%HiResBoundingBox: 0.000000 0.000000 370.406676 241.315677
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
0 0 370.407 241.316 rectclip
gsave
0 0 m
370.406676 0 l
370.406676 241.315677 l
0 241.315677 l
cl
0 setgray
fill
grestore
gsave
27.025341 15.955677 m
361.825341 15.955677 l
361.825341 237.715677 l
27.025341 237.715677 l
cl
0 setgray
fill
grestore
0.5 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
1 setgray
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 15.9557 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 237.716 o
grestore
gsave
24.535 5.537 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
93.9853 15.9557 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
93.9853 237.716 o
grestore
gsave
91.495 5.537 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
160.945 15.9557 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
160.945 237.716 o
grestore
gsave
158.455 5.537 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
227.905 15.9557 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
227.905 237.716 o
grestore
gsave
225.415 5.537 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
294.865 15.9557 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
294.865 237.716 o
grestore
gsave
292.375 5.537 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 15.9557 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 237.716 o
grestore
gsave
356.844 5.537 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 15.9557 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 15.9557 o
grestore
gsave
3.6 12.496 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 42.5232 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 42.5232 o
grestore
gsave
3.6 39.064 moveto
(psmarker7)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 69.0907 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 69.0907 o
grestore
gsave
3.6 65.631 moveto
(psmarker8)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 95.6582 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 95.6582 o
grestore
gsave
3.6 92.199 moveto
(psmarker9)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 122.226 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 122.226 o
grestore
gsave
3.6 118.766 moveto
(psmarker10)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 148.793 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 148.793 o
grestore
gsave
3.6 145.334 moveto
(psmarker11)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 175.361 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 175.361 o
grestore
gsave
3.6 171.902 moveto
(psmarker12)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 201.928 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 201.928 o
grestore
gsave
3.6 198.469 moveto
(psmarker13)
show
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
27.0253 228.496 o
grestore
gsave
/o {
gsave
newpath
translate
0.5 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
1 setgray
fill
grestore
stroke
grestore
} bind def
361.825 228.496 o
grestore
gsave
3.6 225.037 moveto
(psmarker14)
show
grestore
2 setlinewidth
2 setlinecap
1 0 0.553 setrgbcolor
gsave
27.025 15.956 334.8 221.76 rectclip
27.025341 42.523195 m
61.844541 53.691025 l
96.328941 64.982805 l
130.478541 76.396553 l
164.628141 88.045533 l
194.090541 98.288364 l
194.090541 98.288364 l
stroke
grestore
gsave
27.025 15.956 334.8 221.76 rectclip
194.425341 98.405799 m
212.504541 111.228013 l
230.248941 124.084985 l
247.993341 137.217434 l
265.402941 150.375532 l
282.812541 163.810184 l
300.222141 177.527203 l
317.296941 191.260435 l
334.371741 205.276702 l
351.446541 219.581837 l
361.825341 228.420797 l
361.825341 228.420797 l
stroke
grestore
0.5 setlinewidth
0 setlinejoin
1 setgray
gsave
27.025341 15.955677 m
27.025341 237.715677 l
stroke
grestore
gsave
361.825341 15.955677 m
361.825341 237.715677 l
stroke
grestore
gsave
27.025341 15.955677 m
361.825341 15.955677 l
stroke
grestore
gsave
27.025341 237.715677 m
361.825341 237.715677 l
stroke
grestore

end
showpage

%%EndDocument
 @endspecial -600 1417 a
 /End PSfrag
 -600 1417 a -600 -168 a
 /Hide PSfrag
 -600
-168 a -1340 -110 a Fa(PSfrag)26 b(replacemen)n(ts)p
-1340 -81 741 4 v -600 -78 a
 /Unhide PSfrag
 -600 -78 a -642 22 a
  {
 -642
22 a Black 1 1 1 TeXcolorrgb Fa(0)p Black Black -642
22 a
  } 0/Place PSfrag
 -642 22 a -642 122 a
  {
 -642 122 a Black 1 1 1 TeXcolorrgb
Fa(2)p Black Black -642 122 a
  } 1/Place PSfrag
 -642 122 a -642 221 a
  {
 -642
221 a Black 1 1 1 TeXcolorrgb Fa(4)p Black Black -642
221 a
  } 2/Place PSfrag
 -642 221 a -642 321 a
  {
 -642 321 a Black 1 1 1 TeXcolorrgb
Fa(6)p Black Black -642 321 a
  } 3/Place PSfrag
 -642 321 a -642 420 a
  {
 -642
420 a Black 1 1 1 TeXcolorrgb Fa(8)p Black Black -642
420 a
  } 4/Place PSfrag
 -642 420 a -683 520 a
  {
 -683 520 a Black 1 1 1 TeXcolorrgb
Fa(10)p Black Black -683 520 a
  } 5/Place PSfrag
 -683 520 a -766 620 a
  {

-766 620 a Black 1 1 1 TeXcolorrgb Fa(4750)p Black Black
-766 620 a
  } 6/Place PSfrag
 -766 620 a -766 719 a
  {
 -766 719 a Black 1 1 1
TeXcolorrgb Fa(5000)p Black Black -766 719 a
  } 7/Place PSfrag
 -766 719
a -766 819 a
  {
 -766 819 a Black 1 1 1 TeXcolorrgb Fa(5250)p
Black Black -766 819 a
  } 8/Place PSfrag
 -766 819 a -766 919 a
  {
 -766 919
a Black 1 1 1 TeXcolorrgb Fa(5500)p Black Black -766
919 a
  } 9/Place PSfrag
 -766 919 a -766 1018 a
  {
 -766 1018 a Black 1 1 1
TeXcolorrgb Fa(5750)p Black Black -766 1018 a
  } 10/Place PSfrag
 -766 1018
a -766 1118 a
  {
 -766 1118 a Black 1 1 1 TeXcolorrgb Fa(6000)p
Black Black -766 1118 a
  } 11/Place PSfrag
 -766 1118 a -766 1217 a
  {
 -766
1217 a Black 1 1 1 TeXcolorrgb Fa(6250)p Black Black
-766 1217 a
  } 12/Place PSfrag
 -766 1217 a -766 1317 a
  {
 -766 1317 a Black
1 1 1 TeXcolorrgb Fa(6500)p Black Black -766 1317 a
  } 13/Place PSfrag
 -766
1317 a -766 1417 a
  {
 -766 1417 a Black 1 1 1 TeXcolorrgb
Fa(6750)p Black Black -766 1417 a
  } 14/Place PSfrag
 -766 1417 a 2492 1417
a
 currentpoint grestore moveto
 2492 1417 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
